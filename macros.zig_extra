## Note: Zig microarch support
# Generally ReleaseFast should be used with microarch builds for optimization.
# But some packages it may still be desirable to emit extra debug info.
# Note that Zig also supports Zen microarchitectures, however RPM does not.
# Reference: https://ziglang.org/documentation/master/#Targets

## Note:
# ReleaseFast is the recommended way to build most projects that rely on performance optimizations.
# It however strips some debug info.
# This is best used in projects that have flags to override the debug stripping in fast release mode.
# Example for the above: Ghostty
# ReleaseSmall is the recommended way to build some projects, as it builds smaller bins and in some programs has comparable performance.
# It however strips some debug info, like ReleaseFast.
# There is also ReleaseDebug, but this is almost never a good idea for distributed programs as the build size is large and performance is poor.
# Reference: https://ziglang.org/documentation/master/#Build-Mode


## Option reference:
# -c (with argument): "CPU." Choose a specific CPU (micro)architecture to build for. Can also be used to enable/disable CPU features (example: AVX2)
# -c (without argument): Fallback to the target architecture set by RPM (generic option, only applicable to arches where RPM and Zig use the same format)
# -r: "Release." Choose the build/release mode Zig will use. Note that "safe" is the default set by the Zig macros so it is never necessary to specify this option.
# -s: "Static." Use when system integration is not possible or the project has no applicatble build dependencies. Dynamic linking for specific packages can still be set via build flags.
%zig_build_target(cr:s) %{lua:
   if opt.c then
    if rpm.expand("%{?1}"):find("%w") then
     macros["_zig_cpu"] = arg[1]
    else
     macros["_zig_cpu"] = macros["_target_cpu"]
    end
   end
   if opt.r then
    macros["_zig_release_mode"] = macros["-r*"]
   end
   if opt.s then
    rpm.undefine("_zig_system_integration")
   end} \\\
%{shrink: \
    %zig \
        build \
        %{?_zig_build_options} \
}
